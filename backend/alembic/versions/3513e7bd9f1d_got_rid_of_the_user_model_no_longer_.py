"""got rid of the user model , no longer needed

Revision ID: 3513e7bd9f1d
Revises: 6af300ba5a90
Create Date: 2025-07-31 10:45:55.375376

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3513e7bd9f1d'
down_revision: Union[str, Sequence[str], None] = '6af300ba5a90'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # 1) drop FKs from other tables
    op.drop_constraint(op.f('diploma_statuses_changed_by_user_id_fkey'),
                       'diploma_statuses', type_='foreignkey')
    op.drop_constraint(op.f('documents_uploaded_by_id_fkey'),
                       'documents', type_='foreignkey')

    # 2) drop the columns that held those FKs
    op.drop_column('diploma_statuses', 'verification_code')
    op.drop_column('diploma_statuses', 'changed_by_user_id')
    op.drop_column('documents', 'uploaded_by_id')

    # 3) drop indexes on users (optional, but clean)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'),    table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')

    # 4) now you can safely drop the users table
    op.drop_table('users')

    # 5) finally add your new clerk‐user columns
    op.add_column('diploma_statuses',
        sa.Column('changed_by_clerk_user_id', sa.Text(), nullable=False),
    )
    op.add_column('documents',
        sa.Column('uploaded_by_clerk_user_id', sa.Text(), nullable=False),
    )

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('uploaded_by_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('documents_uploaded_by_id_fkey'), 'documents', 'users', ['uploaded_by_id'], ['id'])
    op.drop_column('documents', 'uploaded_by_clerk_user_id')
    op.add_column('diploma_statuses', sa.Column('changed_by_user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('diploma_statuses', sa.Column('verification_code', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('diploma_statuses_changed_by_user_id_fkey'), 'diploma_statuses', 'users', ['changed_by_user_id'], ['id'])
    op.drop_column('diploma_statuses', 'changed_by_clerk_user_id')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###
